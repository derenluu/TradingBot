import requests
import datetime
import logging

logger = logging.getLogger(__name__)

# L·ªõp h·ªó tr·ª£ g·ª≠i th√¥ng b√°o d·∫°ng embed t·ªõi Discord qua webhook
class Notifier:
    def __init__(self, webhook_url, default_color = "#cf4867"):
        self.webhook_url = webhook_url
        self.color = int(default_color.lstrip("#"), 16)

    # G·ª≠i th√¥ng b√°o d·∫°ng embed ƒë·∫øn Discord
    # Parameters:
    # ‚áí title: Ti√™u ƒë·ªÅ ch√≠nh c·ªßa embed
    # ‚áí description: N·ªôi dung m√¥ t·∫£
    # ‚áí footer: D√≤ng ch√∫ th√≠ch ·ªü cu·ªëi embed
    # ‚áí fields: Danh s√°ch dict {'name': ..., 'value': ..., 'inline': ...}
    # ‚áí color: M√£ m√†u hex (#rrggbb) ho·∫∑c int
    def send_log(self, title, description = None, footer = None, fields = None, color = None):
        embed_color = int(color.lstrip("#"), 16) if isinstance(color, str) else (color or self.color)
        embed = {
            "title": title,
            "color": embed_color,
            # "timestamp": datetime.datetime.utcnow().isoformat()
        }

        if description:
            embed["description"] = description
        if footer:
            embed["footer"] = {"text": footer}
        if fields:
            embed["fields"] = [
                {"name": f["name"], "value": f["value"], "inline": f.get("inline", False)} for f in fields
            ]

        payload = {"embeds": [embed]}
        try:
            response = requests.post(self.webhook_url, json=payload)
            if response.status_code == 204:
                logger.info("‚úÖ Log ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng ƒë·∫øn Discord.")
                return True
            else:
                logger.error(f"‚ùå L·ªói g·ª≠i log: {response.status_code}, {response.text}")
                return False
        except requests.exceptions.RequestException as e:
            logger.error(f"üîå L·ªói k·∫øt n·ªëi khi g·ª≠i log: {e}")
            return False
